{"version":3,"sources":["ThemeProvider.js"],"names":["ThemeContext","React","createContext","theme","colors","ThemeProvider","props","updateTheme","updates","setState","replaceTheme","defaultTheme","getTheme","state","defaultColors","useDark","darkColors","children","Component","propTypes","PropTypes","object","node","isRequired","bool","defaultProps","ThemeConsumer","Consumer"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;;;;;AAEO,IAAMA,YAAY,GAAGC,eAAMC,aAAN,CAAoB;AAC9CC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAANA;AADK;AADuC,CAApB,CAArB;;;;IAMcC,a;;;;;AACnB,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;AACjB,8BAAMA,KAAN;;AADiB,UA8BnBC,WA9BmB,GA8BL,UAACC,OAAD,EAAa;AACzB,YAAKC,QAAL,CAAc;AAAA,YAAGN,KAAH,QAAGA,KAAH;AAAA,eAAgB;AAC5BA,UAAAA,KAAK,EAAE,wBAAUA,KAAV,EAAiBK,OAAjB;AADqB,SAAhB;AAAA,OAAd;AAGD,KAlCkB;;AAAA,UAoCnBE,YApCmB,GAoCJ,UAACP,KAAD,EAAW;AACxB,YAAKM,QAAL,CAAc;AAAA,eAAO;AACnBN,UAAAA,KAAK,EAAE,wBAAU,MAAKQ,YAAf,EAA6BR,KAA7B;AADY,SAAP;AAAA,OAAd;AAGD,KAxCkB;;AAAA,UA0CnBS,QA1CmB,GA0CR;AAAA,aAAM,MAAKC,KAAL,CAAWV,KAAjB;AAAA,KA1CQ;;AAGjB,QAAMW,aAAa,GAAGR,KAAK,CAACS,OAAN,GAAgBC,mBAAhB,GAA6BZ,eAAnD;AAEA,UAAKO,YAAL,GAAoB,wBAClB;AACEP,MAAAA,MAAM,EAAEU;AADV,KADkB,EAIlBR,KAAK,CAACH,KAJY,CAApB;AAMA,UAAKU,KAAL,GAAa;AACXV,MAAAA,KAAK,EAAE,MAAKQ,YADD;AAEXI,MAAAA,OAAO,EAAET,KAAK,CAACS;AAFJ,KAAb;AAXiB;AAelB;;;;6BA6BQ;AACP,aACE,6BAAC,YAAD,CAAc,QAAd;AACE,QAAA,KAAK,EAAE;AACLZ,UAAAA,KAAK,EAAE,KAAKU,KAAL,CAAWV,KADb;AAELI,UAAAA,WAAW,EAAE,KAAKA,WAFb;AAGLG,UAAAA,YAAY,EAAE,KAAKA;AAHd;AADT,SAOG,KAAKJ,KAAL,CAAWW,QAPd,CADF;AAWD;;;6CAvC+BX,K,EAAOO,K,EAAO;AAAA,UACpCE,OADoC,GACxBT,KADwB,CACpCS,OADoC;;AAE5C,UAAIA,OAAO,KAAKF,KAAK,CAACE,OAAtB,EAA+B;AAC7B,YAAMD,aAAa,GAAGC,OAAO,GAAGC,mBAAH,GAAgBZ,eAA7C;AACA,eAAO;AACLD,UAAAA,KAAK,EAAE,wBAAUU,KAAK,CAACV,KAAhB,EAAuB;AAC5BC,YAAAA,MAAM,EAAEU;AADoB,WAAvB,CADF;AAILC,UAAAA,OAAO,EAAPA;AAJK,SAAP;AAMD;;AACD,aAAO,IAAP;AACD;;;EA9BwCd,eAAMiB,S;;;AA4DjDb,aAAa,CAACc,SAAd,GAA0B;AACxBhB,EAAAA,KAAK,EAAEiB,mBAAUC,MADO;AAExBJ,EAAAA,QAAQ,EAAEG,mBAAUE,IAAV,CAAeC,UAFD;AAGxBR,EAAAA,OAAO,EAAEK,mBAAUI;AAHK,CAA1B;AAMAnB,aAAa,CAACoB,YAAd,GAA6B;AAC3BtB,EAAAA,KAAK,EAAE,EADoB;AAE3BY,EAAAA,OAAO,EAAE;AAFkB,CAA7B;AAKO,IAAMW,aAAa,GAAG1B,YAAY,CAAC2B,QAAnC","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport deepmerge from 'deepmerge';\n\nimport colors from './colors';\nimport darkColors from './colorsDark';\n\nexport const ThemeContext = React.createContext({\n  theme: {\n    colors,\n  },\n});\n\nexport default class ThemeProvider extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const defaultColors = props.useDark ? darkColors : colors;\n\n    this.defaultTheme = deepmerge(\n      {\n        colors: defaultColors,\n      },\n      props.theme\n    );\n    this.state = {\n      theme: this.defaultTheme,\n      useDark: props.useDark,\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const { useDark } = props;\n    if (useDark !== state.useDark) {\n      const defaultColors = useDark ? darkColors : colors;\n      return {\n        theme: deepmerge(state.theme, {\n          colors: defaultColors,\n        }),\n        useDark,\n      };\n    }\n    return null;\n  }\n  updateTheme = (updates) => {\n    this.setState(({ theme }) => ({\n      theme: deepmerge(theme, updates),\n    }));\n  };\n\n  replaceTheme = (theme) => {\n    this.setState(() => ({\n      theme: deepmerge(this.defaultTheme, theme),\n    }));\n  };\n\n  getTheme = () => this.state.theme;\n\n  render() {\n    return (\n      <ThemeContext.Provider\n        value={{\n          theme: this.state.theme,\n          updateTheme: this.updateTheme,\n          replaceTheme: this.replaceTheme,\n        }}\n      >\n        {this.props.children}\n      </ThemeContext.Provider>\n    );\n  }\n}\n\nThemeProvider.propTypes = {\n  theme: PropTypes.object,\n  children: PropTypes.node.isRequired,\n  useDark: PropTypes.bool,\n};\n\nThemeProvider.defaultProps = {\n  theme: {},\n  useDark: false,\n};\n\nexport const ThemeConsumer = ThemeContext.Consumer;\n"]}