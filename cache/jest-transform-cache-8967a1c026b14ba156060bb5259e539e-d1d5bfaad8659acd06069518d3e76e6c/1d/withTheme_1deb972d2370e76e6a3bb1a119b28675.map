{"version":3,"sources":["withTheme.js"],"names":["isClassComponent","Component","Boolean","prototype","isReactComponent","withTheme","WrappedComponent","themeKey","ThemedComponent","props","forwardedRef","children","rest","context","theme","DefaultTheme","updateTheme","replaceTheme","clone","React","name","displayName","forwardRef","ref"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;;;AAEA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,SAAD;AAAA,SACvBC,OAAO,CAACD,SAAS,CAACE,SAAV,IAAuBF,SAAS,CAACE,SAAV,CAAoBC,gBAA5C,CADgB;AAAA,CAAzB;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,gBAAD,EAAmBC,QAAnB,EAAgC;AAAA,MAC1CC,eAD0C;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,+BAErC;AAAA,0BACqC,KAAKC,KAD1C;AAAA,YACCC,YADD,eACCA,YADD;AAAA,YACeC,QADf,eACeA,QADf;AAAA,YAC4BC,IAD5B;AAGP,eACE,6BAAC,4BAAD,QACG,UAACC,OAAD,EAAa;AAEZ,cAAI,CAACA,OAAL,EAAc;AACZ,gBAAMJ,MAAK,mCAAQG,IAAR;AAAcE,cAAAA,KAAK,EAAEC,cAArB;AAAmCJ,cAAAA,QAAQ,EAARA;AAAnC,cAAX;;AAEA,mBAAOX,gBAAgB,CAACM,gBAAD,CAAhB,GACL,6BAAC,gBAAD;AAAkB,cAAA,GAAG,EAAEI;AAAvB,eAAyCD,MAAzC,EADK,GAGL,6BAAC,gBAAD,EAAsBA,MAAtB,CAHF;AAKD;;AAVW,cAYJK,KAZI,GAYiCD,OAZjC,CAYJC,KAZI;AAAA,cAYGE,WAZH,GAYiCH,OAZjC,CAYGG,WAZH;AAAA,cAYgBC,YAZhB,GAYiCJ,OAZjC,CAYgBI,YAZhB;;AAaZ,cAAMR,KAAK;AACTK,YAAAA,KAAK,EAALA,KADS;AAETE,YAAAA,WAAW,EAAXA,WAFS;AAGTC,YAAAA,YAAY,EAAZA;AAHS,aAIN,wBAAWV,QAAQ,IAAIO,KAAK,CAACP,QAAD,CAAlB,IAAiC,EAA3C,EAA+CK,IAA/C,EAAqD;AACtDM,YAAAA,KAAK,EAAE;AAD+C,WAArD,CAJM;AAOTP,YAAAA,QAAQ,EAARA;AAPS,YAAX;;AAUA,cAAIX,gBAAgB,CAACM,gBAAD,CAApB,EAAwC;AACtC,mBAAO,6BAAC,gBAAD;AAAkB,cAAA,GAAG,EAAEI;AAAvB,eAAyCD,KAAzC,EAAP;AACD;;AACD,iBAAO,6BAAC,gBAAD,EAAsBA,KAAtB,CAAP;AACD,SA5BH,CADF;AAgCD;AArC6C;AAAA;AAAA,IAClBU,eAAMlB,SADY;;AAwChD,MAAMmB,IAAI,GAAGb,QAAQ,eACPA,QADO,gBAGfD,gBAAgB,CAACe,WAAjB,IAAgCf,gBAAgB,CAACc,IAAjD,IAAyD,WAH1C,CAArB;;AAMA,MAAIpB,gBAAgB,CAACM,gBAAD,CAApB,EAAwC;AACtC,QAAMgB,UAAU,GAAG,SAAbA,UAAa,CAACb,KAAD,EAAQc,GAAR;AAAA,aACjB,6BAAC,eAAD,6BAAqBd,KAArB;AAA4B,QAAA,YAAY,EAAEc;AAA1C,SADiB;AAAA,KAAnB;;AAIAD,IAAAA,UAAU,CAACD,WAAX,GAAyBD,IAAzB;AACA,WAAO,mCAAqBD,eAAMG,UAAN,CAAiBA,UAAjB,CAArB,EAAmDhB,gBAAnD,CAAP;AACD;;AAEDE,EAAAA,eAAe,CAACa,WAAhB,GAA8BD,IAA9B;AACA,SAAOZ,eAAP;AACD,CAzDD;;eA2DeH,S","sourcesContent":["import React from 'react';\nimport deepmerge from 'deepmerge';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\nimport { ThemeConsumer } from './ThemeProvider';\nimport DefaultTheme from './theme';\n\nconst isClassComponent = (Component) =>\n  Boolean(Component.prototype && Component.prototype.isReactComponent);\n\nconst withTheme = (WrappedComponent, themeKey) => {\n  class ThemedComponent extends React.Component {\n    render() {\n      const { forwardedRef, children, ...rest } = this.props;\n\n      return (\n        <ThemeConsumer>\n          {(context) => {\n            // If user isn't using ThemeProvider\n            if (!context) {\n              const props = { ...rest, theme: DefaultTheme, children };\n\n              return isClassComponent(WrappedComponent) ? (\n                <WrappedComponent ref={forwardedRef} {...props} />\n              ) : (\n                <WrappedComponent {...props} />\n              );\n            }\n\n            const { theme, updateTheme, replaceTheme } = context;\n            const props = {\n              theme,\n              updateTheme,\n              replaceTheme,\n              ...deepmerge((themeKey && theme[themeKey]) || {}, rest, {\n                clone: false,\n              }),\n              children,\n            };\n\n            if (isClassComponent(WrappedComponent)) {\n              return <WrappedComponent ref={forwardedRef} {...props} />;\n            }\n            return <WrappedComponent {...props} />;\n          }}\n        </ThemeConsumer>\n      );\n    }\n  }\n\n  const name = themeKey\n    ? `Themed.${themeKey}`\n    : `Themed.${\n        WrappedComponent.displayName || WrappedComponent.name || 'Component'\n      }`;\n\n  if (isClassComponent(WrappedComponent)) {\n    const forwardRef = (props, ref) => (\n      <ThemedComponent {...props} forwardedRef={ref} />\n    );\n\n    forwardRef.displayName = name;\n    return hoistNonReactStatics(React.forwardRef(forwardRef), WrappedComponent);\n  }\n\n  ThemedComponent.displayName = name;\n  return ThemedComponent;\n};\n\nexport default withTheme;\n"]}