// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CheckBoxTests Renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#dee2e6",
      "borderRadius": 15,
      "flexDirection": "column",
      "marginTop": 15,
      "maxHeight": 50,
      "overflow": "hidden",
      "width": "90%",
    }
  }
>
  <View
    accessible={true}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "height": 50,
        "paddingLeft": 15,
        "paddingRight": 11.25,
      }
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#495057",
            "fontSize": 16,
            "paddingRight": 5,
          },
          Object {
            "flexGrow": 1,
          },
        ]
      }
    />
    <Icon
      color="#495057"
      name="expand-more"
      size={36}
      style={
        Object {
          "transform": Array [
            Object {
              "rotate": "0deg",
            },
          ],
        }
      }
    />
  </View>
  <View
    style={
      Object {
        "flexDirection": "column",
        "paddingBottom": 15,
        "paddingHorizontal": 15,
      }
    }
  />
</View>
`;

exports[`ExpandableTests Renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#dee2e6",
      "borderRadius": 15,
      "flexDirection": "column",
      "marginTop": 15,
      "maxHeight": 50,
      "overflow": "hidden",
      "width": "90%",
    }
  }
>
  <View
    accessible={true}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "height": 50,
        "paddingLeft": 15,
        "paddingRight": 11.25,
      }
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#495057",
            "fontSize": 16,
            "paddingRight": 5,
          },
          Object {
            "flexGrow": 1,
          },
        ]
      }
    />
    <Icon
      color="#495057"
      name="expand-more"
      size={36}
      style={
        Object {
          "transform": Array [
            Object {
              "rotate": "0deg",
            },
          ],
        }
      }
    />
  </View>
  <View
    style={
      Object {
        "flexDirection": "column",
        "paddingBottom": 15,
        "paddingHorizontal": 15,
      }
    }
  />
</View>
`;
